package com.hedza06.camttl.controllers;import com.hedza06.camttl.services.CustomCleanupHistoryService;import org.springframework.http.HttpStatus;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.DeleteMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestController@RequestMapping(value = "/cleanup", produces = MediaType.APPLICATION_JSON_VALUE)public class HistoryTTLController {    private final CustomCleanupHistoryService customCleanupHistoryService;    public HistoryTTLController(CustomCleanupHistoryService customCleanupHistoryService) {        this.customCleanupHistoryService = customCleanupHistoryService;    }    /**     * Clean history in async way     *     * @return ResponseEntity with Http Status (204 | 500)     */    @DeleteMapping(value = "/history/async")    public ResponseEntity<Void> cleanHistoryAsync()    {        customCleanupHistoryService.cleanHistoryByRemovalTimeAsync();        return new ResponseEntity<>(HttpStatus.NO_CONTENT);    }    /**     * Clean history "manually" using CAM REST     *     * @return ResponseEntity with Http Status (204 | 500)     */    @DeleteMapping(value = "/history/manual")    public ResponseEntity<Void> cleanHistoryUsingRest()    {        customCleanupHistoryService.cleanByExceededInstanceRemovalTime();        return new ResponseEntity<>(HttpStatus.NO_CONTENT);    }}